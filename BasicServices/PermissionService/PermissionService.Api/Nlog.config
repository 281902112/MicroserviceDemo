<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true" throwExceptions="true" internalLogFile="D:\GitHub\MicroserviceDemo\Logs\nlog.txt" internalLogLevel="Trace">

  <!-- enable asp.net core layout renderers -->
  <extensions>
    <add assembly="NLog.Web.AspNetCore"/>
  </extensions>

  <!-- the targets to write to -->
  <targets>

    <target xsi:type="Database" name="databaseGeneralLog"
              dbProvider="Npgsql.NpgsqlConnection, Npgsql"
              connectionString="User ID=postgres;Password=02020511;Host=10.0.75.1;Port=5432;Database=TestLogDB;Pooling=true;"
             >

      <!--

      CREATE TABLE "GeneralLog" (
          Id serial primary key,
          Application character varying(100) NULL,
          Logged text,
          Level character varying(100) NULL,
          Message character varying(8000) NULL,
          Logger character varying(8000) NULL, 
          Callsite character varying(8000) NULL, 
          Exception character varying(8000) NULL
      );

      -->

      <commandText>
        INSERT INTO "GeneralLog" (
        Application, Logged, Level, Message,
        Logger, CallSite, Exception
        ) VALUES (
        @Application, @Logged, @Level, @Message,
        @Logger, @Callsite, @Exception
        );
      </commandText>

      <parameter name="@application" layout="AspNetCoreNlog" />
      <parameter name="@logged" layout="${date}" />
      <parameter name="@level" layout="${level}" />
      <parameter name="@message" layout="${message}" />
      <parameter name="@logger" layout="${logger}" />
      <parameter name="@callSite" layout="${callsite:filename=true}" />
      <parameter name="@exception" layout="${exception:tostring}" />
    </target>

    <target xsi:type="Database" name="databaseApiRequestLog"
              dbProvider="Npgsql.NpgsqlConnection, Npgsql"
              connectionString="User ID=postgres;Password=02020511;Host=10.0.75.1;Port=5432;Database=TestLogDB;Pooling=true;"
             >

      <!--

      CREATE TABLE "ApiRequestLog" (
        "RequestLogID" uuid NOT NULL,
        "RequestTimestamp" timestamp(6) NOT NULL,
        "RequestMethod" text COLLATE "pg_catalog"."default" NOT NULL,
        "RequestUrl" text COLLATE "pg_catalog"."default" NOT NULL,
        "RequestContentType" text COLLATE "pg_catalog"."default" NOT NULL,
        "RequestBody" text COLLATE "pg_catalog"."default",
        "RequestUser" text COLLATE "pg_catalog"."default",
        "RequestTenant" text COLLATE "pg_catalog"."default" NOT NULL,
        "HasError" bool NOT NULL DEFAULT false,
        "ErrorMessage" text COLLATE "pg_catalog"."default",
        "ErrorStackTrace" text COLLATE "pg_catalog"."default",
        "ResponseCode" text COLLATE "pg_catalog"."default",
        "ResponseContentType" text COLLATE "pg_catalog"."default",
        "ResponseBody" text COLLATE "pg_catalog"."default",
        "ResponseTimestamp" timestamp(6) NOT NULL,
        "ExecuteDuration" int4 NOT NULL
      );

      -->

      <commandText>
        INSERT INTO "ApiRequestLog"
        ("RequestLogID", "RequestTimestamp", "RequestMethod", "RequestUrl", "RequestContentType", "RequestBody", "RequestUser","RequestTenant",
        "HasError", "ErrorMessage", "ErrorStackTrace", "ResponseCode", "ResponseContentType", "ResponseBody","ResponseTimestamp","ExecuteDuration")
        VALUES
        (CAST(@RequestLogID AS uuid), CAST(@RequestTimestamp AS timestamp), @RequestMethod, @RequestUrl, @RequestContentType, @RequestBody,@RequestUser,@RequestTenant,
        CAST(@HasError AS bool), @ErrorMessage, @ErrorStackTrace, @ResponseCode, @ResponseContentType, @ResponseBody,CAST(@ResponseTimestamp AS timestamp),CAST(@ExecuteDuration AS int4));
      </commandText>

      <parameter name="@RequestLogID" layout="${event-properties:item=RequestLogID}" />
      <parameter name="@RequestTimestamp" layout="${event-properties:item=RequestTimestamp}" />
      <parameter name="@RequestMethod" layout="${event-properties:item=RequestMethod}" />
      <parameter name="@RequestUrl" layout="${event-properties:item=RequestUrl}" />
      <parameter name="@RequestContentType" layout="${event-properties:item=RequestContentType}" />
      <parameter name="@RequestBody" layout="${event-properties:item=RequestBody}" />
      <parameter name="@RequestUser" layout="${event-properties:item=RequestUser}" />
      <parameter name="@RequestTenant" layout="${event-properties:item=RequestTenant}" />
      <parameter name="@HasError" layout="${event-properties:item=HasError}" />
      <parameter name="@ErrorMessage" layout="${event-properties:item=ErrorMessage}" />
      <parameter name="@ErrorStackTrace" layout="${event-properties:item=ErrorStackTrace}" />
      <parameter name="@ResponseCode" layout="${event-properties:item=ResponseCode}" />
      <parameter name="@ResponseContentType" layout="${event-properties:item=ResponseContentType}" />
      <parameter name="@ResponseBody" layout="${event-properties:item=ResponseBody}" />
      <parameter name="@ResponseTimestamp" layout="${event-properties:item=ResponseTimestamp}" />
      <parameter name="@ExecuteDuration" layout="${event-properties:item=ExecuteDuration}" />

    </target>


  </targets>

  <!-- rules to map from logger name to target -->
  <rules>
    <logger name="GeneralLogger" minlevel="Trace" writeTo="databaseGeneralLog" />
    <logger name="ApiRequestLogger" minlevel="Trace" writeTo="databaseApiRequestLog" />
  </rules>
</nlog>